引 标准流
引 测试

类 点
{
	数据
	{	
		公
		{
			整数 横坐标
			小数 纵坐标
		}
	}

	函数
	{
		公
		{
			空 加(点 乙)
			{
				循环(整数 甲 = 0, 甲 < 10, ++甲)
				{
					若(甲 == 3)
					{
						整数 甲一 = 甲 + 1 + 1 + 5
						打印("循环 一 %d %d %f %d \n", 甲, 乙之横坐标, 乙之纵坐标, 甲一)
					}
					否则 若(甲 < 6)
					{
						乙之横坐标 = 乙之横坐标 - 1
						打印("循环 二 %d %d %f \n", 甲, 乙之横坐标, 乙之纵坐标)
					}
					否则
					{
						打印("循环 三 %d %d %f \n", 甲, 乙之横坐标, 乙之纵坐标)
					}
				}

				当(己指之横坐标 >= 0)
				{
					己指之横坐标 = 己指之横坐标 - 2
					打印("当 %d \n", 己指之横坐标)
				}

				整数 乙二 = 16
				乙二 = 乙二 >> 1
				乙二 >>= 1
			
				打印("乙二 %d \n", 乙二)
			}
		}
	}
}

主函数()
{
	/*三维点 测试点()
	测试点之横坐标 = 123 
	测试点之纵坐标 = 1234 
	测试点之前坐标 = 12345
	
	测试点之输出点()

	三维点 测试点1()
	测试点1之横坐标 = 1 
	测试点1之纵坐标 = 123 
	测试点1之前坐标 = 15

	测试点1之输出点()

	点* 甲甲 = 生成 点()
	甲甲指之横坐标 = 13428
	甲甲指之纵坐标 = 15.601

	打印("测试%f 哈哈哈 %d \n快递费 \n", 甲甲指之纵坐标, 甲甲指之横坐标)

	点 测试甲()
	测试甲之纵坐标 = 4.2
	测试甲之横坐标 = 11

	点 测试乙()
	测试乙之纵坐标 = 8.1
	测试乙之横坐标 = 10
	测试乙之加(测试甲)

	字符* 我的字符 = "我的字符串12345"
	打印("测试%f 哈哈哈 %d \n快递费 %s \n", 测试乙之纵坐标, 测试乙之横坐标, 我的字符)*/


	整数 甲[4] = {10, 252, 3, 4}

	甲[0] = 1001 + 1
	甲[3] = 1079 + 1
	甲[2] = (10 + 10) * (2 + 1)

	整数* 乙 = 甲
	乙++
	整数 丙 = 1250

	打印("测试%d 哈哈哈 %d %d \n快递费 %d %d\n", 甲[2], 丙, 甲[0], *甲, *乙)
}