引 标准流
//引 测试

/*整数 棋盘长度 = 19
整数 棋子空 = 0
整数 棋子黑 = 1
整数 棋子白 = 2

类 点
{
	数据
	{	
		公
		{
			整数 横坐标
			整数 纵坐标
		}
	}

	函数
	{
		公
		{
			空 加(点 乙)
			{
				循环(整数 甲 = 0, 甲 < 10, ++甲)
				{
					若(甲 == 3)
					{
						整数 甲一 = 甲 + 1 + 1 + 5
						打印("循环 一 %d %d %f %d \n", 甲, 乙之横坐标, 乙之纵坐标, 甲一)
					}
					否则 若(甲 < 6)
					{
						乙之横坐标 = 乙之横坐标 - 1
						打印("循环 二 %d %d %f \n", 甲, 乙之横坐标, 乙之纵坐标)
					}
					否则
					{
						打印("循环 三 %d %d %f \n", 甲, 乙之横坐标, 乙之纵坐标)
					}
				}

				当(己指之横坐标 >= 0)
				{
					己指之横坐标 = 己指之横坐标 - 2
					打印("当 %d \n", 己指之横坐标)
				}

				整数 乙二 = 16
				乙二 = 乙二 >> 1
				乙二 >>= 1
			
				打印("乙二 %d \n", 乙二)
			}

			整数 横纵和()
			{
				循环(整数 甲 = 0, 甲 < 10, ++甲)
				{
					若(甲 > 5)
					{
						若(甲 == 6)
						{
							跳过
						}
						打印("甲 > 5 %d \n", 甲)
					}
					否则 若(甲 > 3)
					{
						
						打印("甲 > 3 %d \n", 甲)
					}
					否则
					{
						打印("甲 <= 3 %d \n", 甲)
					}
				}
				返 横坐标 + 纵坐标
			}
		}
	}
}

函数
{
	整数 获得相加值(整数* 甲, 整数 乙)
	{
		返 *甲 + 乙 + 1
	}

	空 刷新打印()
	{
		打印("----")
		循环(整数 甲 = 0, 甲 < 棋盘长度, 甲++)
		{
			若(甲 < 10)
			{
				打印("%d    ", 甲)
			}
			否则
			{
				打印("%d   ", 甲)
			}
		}
		打印("\n")

		循环(整数 甲 = 0, 甲 < 棋盘长度, 甲++)
		{
			若(甲 < 10)
			{
				打印("%d   ", 甲)
			}
			否则
			{
				打印("%d  ", 甲)
			}

			循环(整数 乙 = 0, 乙 < 棋盘长度, 乙++)
			{
				整数 颜色 = 棋子空 //棋盘[甲][乙]
				
				若(颜色 == 棋子黑)
				{
					打印("%s", "黑")
				}
				否则 若(颜色 == 棋子白)
				{
					打印("%s", "白")
				}
				否则
				{
					打印("%s   ", "口")
				}
			}
			打印("\n\n")
		}
	}
}*/

主函数()
{
	/*三维点 测试点()
	测试点之横坐标 = 123 
	测试点之纵坐标 = 1234 
	测试点之前坐标 = 12345
	
	测试点之输出点()

	三维点 测试点1()
	测试点1之横坐标 = 1 
	测试点1之纵坐标 = 123 
	测试点1之前坐标 = 15

	测试点1之输出点()

	点* 甲甲 = 生成 点()
	甲甲指之横坐标 = 13428
	甲甲指之纵坐标 = 15.601

	打印("测试%f 哈哈哈 %d \n快递费 \n", 甲甲指之纵坐标, 甲甲指之横坐标)

	点 测试甲()
	测试甲之纵坐标 = 4.2
	测试甲之横坐标 = 11

	点 测试乙()
	测试乙之纵坐标 = 8.1
	测试乙之横坐标 = 10
	测试乙之加(测试甲)

	字符* 我的字符 = "我的字符串12345"
	打印("测试%f 哈哈哈 %d \n快递费 %s \n", 测试乙之纵坐标, 测试乙之横坐标, 我的字符)


	整数 甲[4] = {10, 252, 3, 4}
	整数* 乙 = 甲

	++甲[0]
	甲[3] = 1079 + 1
	甲[2] = (10 + 10) * (2 + 1)

	乙++
	
	整数 丙 = 24
	整数& 丁 = 丙
	丁 = 20
	丁 = 1200
	丙 = 25

	打印(" %d %d", 丙, 丁)
	打印(" %d %d %d 乙 %d %d\n", 甲[2], 甲[0], *(甲 + 1), *(乙++), *乙)

	点* 甲甲 = 生成 点()
	甲甲指之横坐标 = 13428
	甲甲指之纵坐标 = 15.601
	打印("测试%f 哈哈哈 %d \n快递费 \n", 甲甲指之纵坐标, 甲甲指之横坐标)

	整数 乙 = 1032
	整数(* 函数指针)(整数*, 整数) = &获得相加值
	整数* 丙 = &乙
	//整数 甲 = 获得相加值(&乙, 2)
	整数 甲 = 函数指针(&乙, 2)

	打印(" 甲 %d ,乙 %d , 丙 %d\n", 甲, 乙, *丙)*/

	整数 甲[4][2] = {110, 120, 130, 140, 111, 112, 113, 114}
	//整数 乙 = 甲[1][0]
	//整数 丙 = 1
	整数 (* 二维数组指针)[2] = 甲
	打印(" 甲1 %d , %d\n", 甲[1][0], 二维数组指针[1][0])

	/*刷新打印()

	点 点甲()
	点甲之横坐标 = 10
	点甲之纵坐标 = 100

	打印("%d", 点甲之横纵和())*/
}