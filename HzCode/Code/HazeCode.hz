// 引 基本库·字符串
// 引 基本库·文件
//引 对象
//引 列表
//引 五子棋
//引 基本库·哈希表
// 引 OpenGL接口
//引 测试

//整数 甲 = 101
//三维点 三维点甲()
//五子棋* 我的五子棋 = 空指针
//列表<小数> 小甲()
//列表<整数*> 指针列表()

类 点
{
    数据
    {
        显
        {
            整数 纵坐标
            整数 横坐标
        }
    }

    函数
    {
        显
        {
            点(整数 纵, 整数 横)
            {
                纵坐标 = 纵
                横坐标 = 横
                //打印点()
            }

            空 打印点()
            {
                打印("点的 横坐标 %d 纵坐标 %d\n", 横坐标, 纵坐标)
            }
        }
    }
}

类 线
{
    数据
    {
        显
        {
            点 甲
            点 乙
        }
    }

    函数
    {
        显
        {
            线(点 壹, 点 贰)
            {
                甲 = 壹
                乙 = 贰
                打印("线的 2 横坐标 %d 纵坐标 %d \n", 乙.横坐标, 乙.纵坐标)
            }

            空 打印线()
            {
                打印("线的 1 横坐标 %d 纵坐标 %d 横坐标 %d 纵坐标 %d \n", 甲.横坐标, 甲.纵坐标, 乙.横坐标, 乙.纵坐标)
            }
        }
    }
}

函数
{
    // 空 引用测试(整数& 甲, 整数 乙)
    // {
    //     甲 = 1
    //     打印("引用测试 %d\n", 甲)
    // }

    空 测试主函数(整数 甲, 整数 乙)
    {
        点 点甲 = 生成 点(10, 12)
        点 点乙 = 生成 点(100, 120)

        线 线丙 = 生成 线(点甲, 点乙)
        线丙.打印线()

        // 字符 壹 = "床前明月光"
        // 字符 贰 = "疑是地上霜"
        // 字符 叁 = "举头望明月"
        // 字符 肆 = "低头思故乡"

        // 字符 静夜思 = 生成 字符()
        // 静夜思.格式化("%d %s\n%d %s\n%d %s\n%d %s\n", 1, 壹, 2, 贰, 3, 叁, 4, 肆)
        // 字符 完整静夜思 = "静夜思\n  李白\n"
        // 完整静夜思.接(静夜思)
        // 打印("%s", 完整静夜思)

        //整数[][] 甲数组 = 生成 整数[5][4]
        //列表<列表<整数>> 乙数组

        //整数64 长度 = 甲数组->维之长度(0)

        //打印("数组长度 %d\n", 长度)
        //函数<整数&, 整数> 测试函数指针 = 引用测试
        // 整数8 甲8
        // 整数16 甲16
        //整数 甲32 = 200
        // 整数64 甲64

        // 正整数 正甲32
        // 正整数64 正甲64

        // 小数 小甲32
        // 小数64 小甲64
        //测试函数指针(甲32, 乙)

        // 整数[19][19] 棋盘 = 生成 整数[19][19]
        // 字符 甲 = "我的测试字符串"
        // 字符 乙 = "我的测试字符串"
        // 哈希表<整数, 整数> 我的哈希表()

        // 函数<整数, 整数> 测数函数 = 空指针

        // 我的哈希表->插入值()

        //文件 我的文件("G:\\GitHub\\River\\River\\KnowledgeNeuron\\NeuronText\\李白.txt", 文件操作方式::只读)

        //字符 第一个字符 = 25125
        //我的文件之写入字符(第一个字符)
        //第一个字符 = 我的文件之读取字符()
        //字符[] 我的字符串 = 生成 字符[14]
        //我的文件之读取一行字符串(&我的字符串)
        //字符串* 丙 = 生成 字符串("测试主函数字符串")
        //丙指之添加(" 附加字符串")
        //字符 测试字符 = 丙指之获得(0)

        //我的文件之写入字符串(丙指之获得字符地址())
        
        // 打印("打印字符串 %s", &我的字符串)
        // 我的文件之读取一行字符串(&我的字符串)
        // 打印("打印字符串 %s", &我的字符串)
        
        // 我的文件之关闭()
        // 打印("测试主函数 %d\n", 甲 + 乙)



        // 整数 甲0 = 100
        // 整数 甲1 = 250
        // 整数 甲2 = 500
        // 指针列表之添加(&甲0)
        // 指针列表之添加(&甲1)
        // 指针列表之添加(&甲2)
        // 整数* 丙 = 指针列表之获得(0)
        // 打印(" 丁 %d\n", *丙)

        // 五子棋* 我的五子棋 = 生成 五子棋()
        // 打印("开始游戏\n")
        // 我的五子棋指之开始游戏()
        // 当(真)
        // {
        //     整数 甲 = 100
        //     整数 乙 = 99
        //     输入("%d%d", &甲, &乙)
        //     我的五子棋指之放子(甲, 乙, 玩家默认颜色)

        //     若(我的五子棋指之是否胜利(玩家默认颜色))
        //     {
        //         打印("玩家胜利！\n")
        //         跳出
        //     }

        //     我的五子棋指之模拟计算AI放子(&甲, &乙, AI默认颜色)
        //     我的五子棋指之放子(甲, 乙, AI默认颜色)
        //     若(我的五子棋指之是否胜利(AI默认颜色))
        //     {
        //         打印("AI胜利！\n")
        //         跳出
        //     }
        // }

        // 打印("游戏结束！\n")

    }
}

// }