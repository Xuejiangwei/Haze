引 标准流
引 五子棋
//引 测试

类 类甲
{
	数据
	{
		公
		{
			字节 甲
			整数 乙
			//字符 甲字符
			字节 丙
			//整数 丁
		}
	}
}

/*函数
{
	整数 获得相加值(整数* 甲, 整数 乙)
	{
		乘以2(甲)
		//*甲 = *甲 * 2
		返 *甲 + 乙 + 1
	}
	
	空 乘以2(整数* 甲)
	{
		*甲 = *甲 * 2
	}

	空 刷新打印()
	{
		打印("----")
		循环(整数 甲 = 0, 甲 < 19, 甲++)
		{
			若(甲 < 10)
			{
				打印("%d    ", 甲)
			}
			否则
			{
				打印("%d   ", 甲)
			}
		}
		打印("\n")

		循环(整数 甲 = 0, 甲 < 19, 甲++)
		{
			若(甲 < 10)
			{
				打印("%d   ", 甲)
			}
			否则
			{
				打印("%d  ", 甲)
			}

			循环(整数 乙 = 0, 乙 < 19, 乙++)
			{
				整数 颜色 = 0 //棋盘[甲][乙]
				
				若(颜色 == 1)
				{
					打印("%s", "黑")
				}
				否则 若(颜色 == 2)
				{
					打印("%s", "白")
				}
				否则
				{
					打印("%s   ", "口")
				}
			}
			打印("\n\n")
		}
	}
}*/

主函数()
{
	/*整数 甲 = 1
	甲++
	甲++
	打印("甲 %d\n", 甲)

	类甲 甲()
	甲之甲 = 10
	甲之乙 = 120
	甲之丙 = 103
	整数* 指针甲 = 空指针
	指针甲 = &甲之乙
	*指针甲 = 999

	打印("类甲 甲 %d, 乙 %d, 丙 %d\n", 甲之甲, 甲之乙, 甲之丙)*/

	/*整数 甲 = 2
	若(甲 != 2)
	{
		打印("甲")
	}
	否则
	{
		刷新打印()
	}*/

	/*整数 甲 = 10
	整数 乙 = 20
	整数 丙 = 30
	整数* 指针甲 = (&甲)
	整数* 指针乙 = (&乙)
	甲 = 乙 > 1 ? 乙 : 10
	(*指针甲) = (丙)
	(*指针乙) = 2
	打印("---------------甲 %d %d", (*指针甲), 甲)

	整数 甲 = -10212
	整数 乙 = 123
	甲 = -乙
	打印("甲 乙 %d %d %d", 甲, 乙, -12496)
	
	整数 甲 = 1
	整数 乙 = 1
	若(假 或 甲 == 乙)
	{
		打印("甲等于1\n")
	}
	否则
	{
		打印("甲不等于1\n")
	}*/

	五子棋 我的五子棋()
	我的五子棋之开始游戏()
	当(真)
	{
		整数 甲 = 8
		整数 乙 = 8
		打印("输入坐标\n")
		输入("%d%d", (&甲), (&乙))
		我的五子棋之放子(甲, 乙, 玩家默认颜色)

		若(我的五子棋之是否胜利(玩家默认颜色) == 真)
		{
			打印("玩家胜利\n")
			跳出
		}

		我的五子棋之模拟计算AI放子((&甲), (&乙), AI默认颜色)
		我的五子棋之放子(甲, 乙, AI默认颜色)
		打印("AI放子 %d %d\n", 甲, 乙)

		若(我的五子棋之是否胜利(AI默认颜色) == 真)
		{
			打印("AI胜利\n")
			跳出
		}
	}
	打印("游戏结束\n")

	/*打印("结束\n")

	整数 数组甲[3][3] = {1, 2, 3, 4, 5, 6, 7, 8, 9}
	整数 数组乙[3][3] = {11, 12, 13, 14, 15, 16, 17, 18, 19}
	数组甲[1][1] = 111
	数组甲[2][2] = 数组乙[2][2]
	数组乙[2][2] = 119

	整数 (*数组指针甲)[3] = 1 > 2 ? 数组甲 : 数组乙

	打印("数组甲[1][1] = %d 数组甲[2][2] = %d  数组乙[2][2] = %d  数组指针甲[2][2] = %d", 数组甲[1][1], 数组甲[2][2], 数组乙[2][2], 数组指针甲[2][2])*/

	//三维点 测试点()
	//测试点之输出点()
}