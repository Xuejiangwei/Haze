类 字符串
{
    数据
    {
        私
        {
            字符[] 字符串数组
            正长整数 长度
            正长整数 容量
        }
    }

    函数
    {
        公
        {
            字符串(字符* 字符文本)
            {
                长度 = 0
                容量 = 15
                字符串数组 = 生成 字符[容量 + 1]

                长度 = 获得字符个数(字符文本)
                内存复制(&字符串数组, 字符文本, 长度 * 字节数(字符))
            }

            正长整数 获得长度()
            {
                返 长度
            }

            字符* 获得字符地址()
            {
                返 &字符串数组
            }

            // 空 添加(字符串数组& 值)
            // {
            //     若 (长度 >= 容量)
            //     {
            //         正长整数 新容量 = 容量 * 2   
            //         若 (新容量 == 0)
            //         {
            //             新容量 = 2
            //         }

            //         子[] 新列表数组 = 生成 子[新容量]
                    
            //         若 (容量 > 0)
            //         {
            //             //字节数(子)
            //             内存复制(新列表数组, 列表数组, 长度 * 8)
            //         }
                    
            //         容量 = 新容量
            //         列表数组 = 新列表数组
            //         列表数组[长度] = 值
            //         长度++
            //     }
            //     否则
            //     {
            //         列表数组[长度] = 值
            //         长度++
            //     }
            // }

            字符 获得(整数 索引)
            {
                返 字符串数组[索引]
            }
        }
    }
}
